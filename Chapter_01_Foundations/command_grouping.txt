# Pipelines
# Count lines, words, characters
$ wc /etc/motd
  7  40 286
 # Direct the output into a file
$ ls /etc >files
# count the number of words into the file
$ wc -l <files

# Pipe the two commands together
$ ls /etc | wc -l

# Do the same for files in usr folder
$ ls /usr | cat -n

# Exit code
# Run a command that succeeds
$ wc /etc/motd

# Print exit status (zero because it succeeded)
$ echo $? 

# Run a command that fails
$ wc xyzzy 
wc: xyzzy: No such file or directory
# Print exit status (non-zero)
$ echo $?

# The and operator &&
# Create a file
$ touch a-file
# Copy a into b and then delete a (Execute second only if first succeeds)
$ cat -n a-file >b-file && rm a-file

# Only half of the command will succeed, second is wrong
$ cat -n bfile >cfile && rm b-file 
cat: bfile: No such file or directory

# The or operator ||
# Create a file
$ touch a-file
# Create a command that succeeds
$ cp a-file b-file || echo Copy failed
# Create a command that fails
$ cp afile bfile || echo Copy failed
cp: cannot stat 'afile': No such file or directory
Copy failed

# The negation operator !
# Command that succeeds (but will be seen as failure because of !)
$ ! date
Fri Jan 20 01:15:36 AM CET 2023
$ echo $?
1
# Command that fails (will be seen as success)
$ ! ls xyzzy 
ls: cannot access xyzzy: No such file or directory
$ echo $?
0

# Command grouping
# Execute two commands in a row
$ echo -n 'Today is: ' ; date
Fri Jan 20 01:15:36 AM CET 2023

# Redirect the output of both into a new file
$ { echo -n 'Today is: ' ; date ; } >timestamp 
$ cat timestamp
Today is: Fri Jan 20 01:21:49 AM CET 2023

# Pipe output of both
$ { echo -n 'Today is: ' ; date ; } | wc -c
43

$ { # Group on multiple lines
>   echo -n 'Today is: '
>   date
> }
Today is: Fri Jan 20 01:25:37 AM CET 2023
